BASE <http://ontology.qworum.net/interface/> # TODO end with #?

# Metadata
PREFIX foaf:    <http://xmlns.com/foaf/0.1/> 
PREFIX dcterms: <http://purl.org/dc/terms/>       # https://www.dublincore.org/specifications/dublin-core/dcmi-terms/
PREFIX cc:      <http://creativecommons.org/ns#> 
PREFIX owl:     <http://www.w3.org/2002/07/owl#>
PREFIX vann:    <http://purl.org/vocab/vann/> 

# Ontology
PREFIX :     <>
PREFIX qrmv: <http://ontology.qworum.net/v/>
PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> # https://www.w3.org/TR/rdf-schema/
PREFIX xsd:  <http://www.w3.org/2001/XMLSchema#> 

# -- Document metadata --------------------------------------------------
<>
  a foaf:Document;
  dcterms:description '''
    Ontology for defining the interfaces that Qworum classes can implement.
    Interfaces can extend other interfaces, and define object methods.

    Use cases:
    ➜ Developer looking for services (classes) that implement an interface.
    ➜ Runtime verification by the Qworum runtime (check call params, return values etc).
  '''@en;
  foaf:maker <https://qworum.net/data/DoğaArmangil.ttl#id>;
  cc:license <https://creativecommons.org/publicdomain/zero/1.0/>;

  a owl:Ontology;
  vann:preferredNamespacePrefix 'qrmi';
  vann:preferredNamespaceUri 'http://ontology.qworum.net/interface/'.

# RDF Classes  --------------------------------------------------

# The interface of a Qworum class
:Interface rdfs:subClassOf rdfs:Class. # has: extends, property, method
:ExtensionList rdfs:subClassOf :Interface, rdf:Seq. # has: _1, _2, _3, _4, _5, _6
:Method rdfs:subClassOf rdfs:Class. # has: path, parameter, local, returns, throws

:JsonPointer rdfs:subClassOf rdfs:Class. # has: name, schema
:SemanticDataPointer rdfs:subClassOf rdfs:Class. # has: name, shape
:InterfacePointer rdfs:subClassOf rdfs:Class. # has: name

:JsonValue rdfs:subClassOf rdfs:Class. # has: schema
:SemanticDataValue rdfs:subClassOf rdfs:Class. # has: shape

:Fault rdfs:subClassOf rdfs:Class. # has: type

:extends
  a rdf:Property;
  rdfs:domain :Interface;
  rdfs:range :ExtensionList.

:method
  a rdf:Property;
  rdfs:domain :Interface;
  rdfs:range :Method.

:path
  a rdf:Property;
  rdfs:domain :Method;
  rdfs:range :methodPath. # TODO allow xsd:string?

:parameter
  a rdf:Property;
  rdfs:domain :Method;
  rdfs:range 
    :JsonPointer, :SemanticDataPointer, :InterfacePointer.

:returns
  a rdf:Property;
  rdfs:domain :Method;
  rdfs:range 
    :JsonValue, :SemanticDataValue.

:throws
  a rdf:Property;
  rdfs:domain :Method;
  rdfs:range :Fault.

:name
  a rdf:Property;
  rdfs:domain
    :JsonPointer, :SemanticDataPointer, :InterfacePointer;
  rdfs:range xsd:string.

:interface
  a rdf:Property;
  rdfs:domain :InterfacePointer;
  rdfs:range :Interface.

:schema
  a rdf:Property;
  rdfs:comment '''
    A JSON schema. Can be either linked or inline.
  '''@en;
  rdfs:seeAlso <https://json-schema.org/learn/getting-started-step-by-step>;
  rdfs:domain :JsonPointer, :JsonValue;
  rdfs:range qrmv:anyIRI, qrmv:Json.

:shapes
  a rdf:Property;
  rdfs:comment '''
    A ShEx schema. Can be either linked or inline.
  '''@en;
  rdfs:seeAlso <https://shex.io/shex-primer/#quickStart>;
  rdfs:domain :SemanticDataPointer, :SemanticDataValue;
  rdfs:range qrmv:anyIRI, xsd:string.

:shapeMap
  a rdf:Property;
  rdfs:comment '''
    The nodes and predicates to validate with the ShEx shapes.
    Can be either linked or inline.
  '''@en;
  rdfs:seeAlso <https://shex.io/shex-primer/#quickStart>;
  rdfs:domain :SemanticDataPointer, :SemanticDataValue;
  rdfs:range qrmv:anyIRI, xsd:string.

:type
  a rdf:Property;
  rdfs:domain :Fault;
  rdfs:range xsd:string.

:_1 
  rdfs:subPropertyOf rdf:_1;
  rdfs:domain :ExtensionList;
  rdfs:range :Interface.
:_2 
  rdfs:subPropertyOf rdf:_2;
  rdfs:domain :ExtensionList;
  rdfs:range :Interface.
:_3 
  rdfs:subPropertyOf rdf:_3;
  rdfs:domain :ExtensionList;
  rdfs:range :Interface.
:_4 
  rdfs:subPropertyOf rdf:_4;
  rdfs:domain :ExtensionList;
  rdfs:range :Interface.
:_5 
  rdfs:subPropertyOf rdf:_5;
  rdfs:domain :ExtensionList;
  rdfs:range :Interface.
:_6 
  rdfs:subPropertyOf rdf:_6;
  rdfs:domain :ExtensionList;
  rdfs:range :Interface.



# Other

:methodPath
  rdfs:subClassOf qrmv:anyIRI;
  rdfs:comment 'An IRI path that does not start with an "/".'@en.

:basePath
  rdfs:subClassOf qrmv:anyIRI;
  rdfs:comment '''
    An IRI path that starts and ends with an "/". 
    The slashes are implicitly added if they are missing.
  '''@en.


# End of file
[] qrmv:end [].

